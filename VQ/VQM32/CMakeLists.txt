include(project_component_helpers)
set_project_component_name()
cmake_path(GET CMAKE_CURRENT_SOURCE_DIR FILENAME PROJECT_COMPONENT_DIRNAME)
project_component(STATIC_LIBRARY)

target_include_directories(${PROJECT_COMPONENT_NAME}
  PUBLIC
  "${CMAKE_CURRENT_SOURCE_DIR}/../INCLUDE"
  "${CMAKE_CURRENT_SOURCE_DIR}/../INCLUDE/${PROJECT_COMPONENT_DIRNAME}"
)

list(TRANSFORM CMAKE_ANY_LANG_IGNORE_LOCAL_GLOBS
  PREPEND "../INCLUDE/"
  OUTPUT_VARIABLE PROJECT_COMPONENT_ANY_LANG_INCLUDE_PARENT_GLOBS
)
list(TRANSFORM CMAKE_ANY_LANG_IGNORE_LOCAL_GLOBS
  PREPEND "../INCLUDE/${PROJECT_COMPONENT_DIRNAME}/"
  OUTPUT_VARIABLE PROJECT_COMPONENT_ANY_LANG_INCLUDE_GLOBS
)
file(GLOB PROJECT_COMPONENT_ANY_LANG_INCLUDE_PARENT_FILES
  CONFIGURE_DEPENDS
  ${PROJECT_COMPONENT_ANY_LANG_INCLUDE_PARENT_GLOBS}
)
file(GLOB_RECURSE PROJECT_COMPONENT_ANY_LANG_INCLUDE_FILES
  CONFIGURE_DEPENDS
  ${PROJECT_COMPONENT_ANY_LANG_INCLUDE_GLOBS}
)
target_sources(${PROJECT_COMPONENT_NAME}
  PUBLIC FILE_SET HEADERS TYPE HEADERS
  BASE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/../INCLUDE"
  FILES ${PROJECT_COMPONENT_ANY_LANG_INCLUDE_PARENT_FILES}
  ${PROJECT_COMPONENT_ANY_LANG_INCLUDE_FILES}
)

set_source_files_properties(
  ${PROJECT_COMPONENT_ASM_MASM_SOURCE_FILES}
  PROPERTIES COMPILE_DEFINITIONS "PHARLAP_TNT=$<IF:$<BOOL:${PHARLAP_TNT}>,1,0>"
)
